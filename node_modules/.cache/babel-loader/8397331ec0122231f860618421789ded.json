{"ast":null,"code":"export default {\n  name: \"SortButtons\",\n  props: [\"movies\"],\n\n  data() {\n    return {\n      sortedByDate: false,\n      sortedByRating: false,\n      sortedByTitle: false\n    };\n  },\n\n  methods: {\n    // Sort the Dates\n    sortByDate() {\n      const tempMovies = this.movies;\n\n      if (!this.sortedByDate) {\n        tempMovies.sort((a, b) => {\n          if (a.release_date > b.release_date) {\n            return 1;\n          }\n\n          if (a.release_date < b.release_date) {\n            return -1;\n          }\n\n          return 0;\n        });\n        this.sortedByDate = true;\n      } else {\n        tempMovies.sort((a, b) => {\n          if (a.release_date < b.release_date) {\n            return 1;\n          }\n\n          if (a.release_date > b.release_date) {\n            return -1;\n          }\n\n          return 0;\n        });\n        this.sortedByDate = false;\n      }\n    },\n\n    // Sort the Rank\n    sortByRank() {\n      const tempMovies = this.movies;\n\n      if (!this.sortedByRating) {\n        tempMovies.sort((a, b) => {\n          if (a.vote_average > b.vote_average) {\n            return 1;\n          }\n\n          if (a.vote_average < b.vote_average) {\n            return -1;\n          }\n\n          return 0;\n        });\n        this.sortedByRating = true;\n      } else {\n        tempMovies.sort((a, b) => {\n          if (a.vote_average < b.vote_average) {\n            return 1;\n          }\n\n          if (a.vote_average > b.vote_average) {\n            return -1;\n          }\n\n          return 0;\n        });\n        this.sortedByRating = false;\n      }\n    },\n\n    // Sort the Titles\n    sortByTitle() {\n      const tempMovies = this.movies;\n\n      if (!this.sortedByTitle) {\n        tempMovies.sort((a, b) => {\n          if (a.title > b.title) {\n            return 1;\n          }\n\n          if (a.title < b.title) {\n            return -1;\n          }\n\n          return 0;\n        });\n        this.sortedByTitle = true;\n      } else {\n        tempMovies.sort((a, b) => {\n          if (a.title < b.title) {\n            return 1;\n          }\n\n          if (a.title > b.title) {\n            return -1;\n          }\n\n          return 0;\n        });\n        this.sortedByTitle = false;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAeA,eAAe;EACbA,IAAI,EAAE,aADO;EAEbC,KAAK,EAAE,CAAC,QAAD,CAFM;;EAGbC,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,KADT;MAELC,cAAc,EAAE,KAFX;MAGLC,aAAa,EAAE;IAHV,CAAP;EAKD,CATY;;EAWbC,OAAO,EAAE;IACP;IACAC,UAAU,GAAG;MACX,MAAMC,UAAS,GAAI,KAAKC,MAAxB;;MAEA,IAAI,CAAC,KAAKN,YAAV,EAAwB;QACtBK,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACxB,IAAID,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC;YACnC,OAAO,CAAP;UACF;;UACA,IAAIF,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC;YACnC,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARD;QASA,KAAKV,YAAL,GAAoB,IAApB;MACF,CAXA,MAWO;QACLK,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACxB,IAAID,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC;YACnC,OAAO,CAAP;UACF;;UACA,IAAIF,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC;YACnC,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARD;QASA,KAAKV,YAAL,GAAoB,KAApB;MACF;IACD,CA5BM;;IA8BP;IACAW,UAAU,GAAG;MACX,MAAMN,UAAS,GAAI,KAAKC,MAAxB;;MAEA,IAAI,CAAC,KAAKL,cAAV,EAA0B;QACxBI,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACxB,IAAID,CAAC,CAACI,YAAF,GAAiBH,CAAC,CAACG,YAAvB,EAAqC;YACnC,OAAO,CAAP;UACF;;UACA,IAAIJ,CAAC,CAACI,YAAF,GAAiBH,CAAC,CAACG,YAAvB,EAAqC;YACnC,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARD;QASA,KAAKX,cAAL,GAAsB,IAAtB;MACF,CAXA,MAWO;QACLI,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACxB,IAAID,CAAC,CAACI,YAAF,GAAiBH,CAAC,CAACG,YAAvB,EAAqC;YACnC,OAAO,CAAP;UACF;;UACA,IAAIJ,CAAC,CAACI,YAAF,GAAiBH,CAAC,CAACG,YAAvB,EAAqC;YACnC,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARD;QASA,KAAKX,cAAL,GAAsB,KAAtB;MACF;IACD,CAzDM;;IA2DP;IACAY,WAAW,GAAG;MACZ,MAAMR,UAAS,GAAI,KAAKC,MAAxB;;MAEA,IAAI,CAAC,KAAKJ,aAAV,EAAyB;QACvBG,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACxB,IAAID,CAAC,CAACM,KAAF,GAAUL,CAAC,CAACK,KAAhB,EAAuB;YACrB,OAAO,CAAP;UACF;;UACA,IAAIN,CAAC,CAACM,KAAF,GAAUL,CAAC,CAACK,KAAhB,EAAuB;YACrB,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARD;QASA,KAAKZ,aAAL,GAAqB,IAArB;MACF,CAXA,MAWO;QACLG,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACxB,IAAID,CAAC,CAACM,KAAF,GAAUL,CAAC,CAACK,KAAhB,EAAuB;YACrB,OAAO,CAAP;UACF;;UACA,IAAIN,CAAC,CAACM,KAAF,GAAUL,CAAC,CAACK,KAAhB,EAAuB;YACrB,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARD;QASA,KAAKZ,aAAL,GAAqB,KAArB;MACF;IACD;;EAtFM;AAXI,CAAf","names":["name","props","data","sortedByDate","sortedByRating","sortedByTitle","methods","sortByDate","tempMovies","movies","sort","a","b","release_date","sortByRank","vote_average","sortByTitle","title"],"sourceRoot":"","sources":["/Users/sylvainrotureau/Desktop/web dev/tmdb/tmdb/src/components/elements/SortButtons.vue"],"sourcesContent":["<template>\n  <div class=\"g-2 my-\">\n    <button @click=\"sortByTitle\" class=\"btn btn-dark\">\n      Trier par titre\n    </button>\n    <button @click=\"sortByDate\" class=\"btn btn-dark\">\n      Trier par date de sortie\n    </button>\n    <button @click=\"sortByRank\" class=\"btn btn-dark\">\n      Trier par note\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"SortButtons\",\n  props: [\"movies\"],\n  data() {\n    return {\n      sortedByDate: false,\n      sortedByRating: false,\n      sortedByTitle: false,\n    };\n  },\n\n  methods: {\n    // Sort the Dates\n    sortByDate() {\n      const tempMovies = this.movies;\n\n      if (!this.sortedByDate) {\n        tempMovies.sort((a, b) => {\n          if (a.release_date > b.release_date) {\n            return 1;\n          }\n          if (a.release_date < b.release_date) {\n            return -1;\n          }\n          return 0;\n        });\n        this.sortedByDate = true;\n      } else {\n        tempMovies.sort((a, b) => {\n          if (a.release_date < b.release_date) {\n            return 1;\n          }\n          if (a.release_date > b.release_date) {\n            return -1;\n          }\n          return 0;\n        });\n        this.sortedByDate = false;\n      }\n    },\n\n    // Sort the Rank\n    sortByRank() {\n      const tempMovies = this.movies;\n\n      if (!this.sortedByRating) {\n        tempMovies.sort((a, b) => {\n          if (a.vote_average > b.vote_average) {\n            return 1;\n          }\n          if (a.vote_average < b.vote_average) {\n            return -1;\n          }\n          return 0;\n        });\n        this.sortedByRating = true;\n      } else {\n        tempMovies.sort((a, b) => {\n          if (a.vote_average < b.vote_average) {\n            return 1;\n          }\n          if (a.vote_average > b.vote_average) {\n            return -1;\n          }\n          return 0;\n        });\n        this.sortedByRating = false;\n      }\n    },\n\n    // Sort the Titles\n    sortByTitle() {\n      const tempMovies = this.movies;\n\n      if (!this.sortedByTitle) {\n        tempMovies.sort((a, b) => {\n          if (a.title > b.title) {\n            return 1;\n          }\n          if (a.title < b.title) {\n            return -1;\n          }\n          return 0;\n        });\n        this.sortedByTitle = true;\n      } else {\n        tempMovies.sort((a, b) => {\n          if (a.title < b.title) {\n            return 1;\n          }\n          if (a.title > b.title) {\n            return -1;\n          }\n          return 0;\n        });\n        this.sortedByTitle = false;\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}