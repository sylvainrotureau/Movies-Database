{"ast":null,"code":"export default {\n  name: \"SortButtons\",\n  props: [\"movies\"],\n\n  data() {\n    return {\n      sortedByDate: false,\n      sortedByRating: false,\n      sortedByTitle: false\n    };\n  },\n\n  methods: {\n    sortByDate() {\n      const tempMovies = this.movies;\n\n      if (!this.sortedByDate) {\n        tempMovies.sort((a, b) => {\n          if (a.release_date > b.release_date) {\n            return 1;\n          }\n\n          if (a.release_date < b.release_date) {\n            return -1;\n          }\n\n          return 0;\n        });\n        this.sortedByDate = true;\n      } else {\n        tempMovies.sort((a, b) => {\n          if (a.release_date < b.release_date) {\n            return 1;\n          }\n\n          if (a.release_date > b.release_date) {\n            return -1;\n          }\n\n          return 0;\n        });\n        this.sortedByDate = false;\n      }\n    },\n\n    sortByRank() {\n      const tempMovies = this.movies;\n\n      if (!this.sortedByDate) {\n        tempMovies.sort((a, b) => {\n          if (a.vote_average > b.vote_average) {\n            return 1;\n          }\n\n          if (a.vote_average < b.vote_average) {\n            return -1;\n          }\n\n          return 0;\n        });\n      } else {\n        tempMovies.sort((a, b) => {\n          if (a.vote_average > b.vote_average) {\n            return 1;\n          }\n\n          if (a.vote_average < b.vote_average) {\n            return -1;\n          }\n\n          return 0;\n        });\n      }\n    },\n\n    sortByTitle() {\n      const tempMovies = this.movies;\n      tempMovies.sort((a, b) => {\n        if (a.title > b.title) {\n          return 1;\n        }\n\n        if (a.title < b.title) {\n          return -1;\n        }\n\n        return 0;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAeA,eAAe;EACbA,IAAI,EAAE,aADO;EAEdC,KAAK,EAAE,CACJ,QADI,CAFO;;EAKfC,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,KADT;MAELC,cAAc,EAAE,KAFX;MAGLC,aAAa,EAAE;IAHV,CAAP;EAKD,CAXc;;EAafC,OAAO,EAAE;IACPC,UAAU,GAAG;MACX,MAAMC,UAAS,GAAI,KAAKC,MAAxB;;MAEJ,IAAI,CAAC,KAAKN,YAAV,EAAwB;QACpBK,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACxB,IAAID,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC;YACnC,OAAO,CAAP;UACF;;UACA,IAAIF,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC;YACnC,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARD;QASF,KAAKV,YAAL,GAAkB,IAAlB;MACE,CAXJ,MAWW;QACPK,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACxB,IAAID,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC;YACnC,OAAO,CAAP;UACF;;UACA,IAAIF,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC;YACnC,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARD;QASF,KAAKV,YAAL,GAAkB,KAAlB;MACE;IACD,CA3BM;;IA6BPW,UAAU,GAAG;MACV,MAAMN,UAAS,GAAI,KAAKC,MAAxB;;MAEL,IAAI,CAAC,KAAKN,YAAV,EAAwB;QACpBK,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACxB,IAAID,CAAC,CAACI,YAAF,GAAiBH,CAAC,CAACG,YAAvB,EAAqC;YACnC,OAAO,CAAP;UACF;;UACA,IAAIJ,CAAC,CAACI,YAAF,GAAiBH,CAAC,CAACG,YAAvB,EAAqC;YACnC,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARD;MAUJ,CAXA,MAWO;QACLP,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;UACtB,IAAID,CAAC,CAACI,YAAF,GAAiBH,CAAC,CAACG,YAAvB,EAAqC;YACnC,OAAO,CAAP;UACF;;UACA,IAAIJ,CAAC,CAACI,YAAF,GAAiBH,CAAC,CAACG,YAAvB,EAAqC;YACnC,OAAO,CAAC,CAAR;UACF;;UACA,OAAO,CAAP;QACD,CARH;MASF;IACE,CAtDO;;IAwDPC,WAAW,GAAG;MACX,MAAMR,UAAS,GAAI,KAAKC,MAAxB;MAEDD,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;QACxB,IAAID,CAAC,CAACM,KAAF,GAAUL,CAAC,CAACK,KAAhB,EAAuB;UACrB,OAAO,CAAP;QACF;;QACA,IAAIN,CAAC,CAACM,KAAF,GAAUL,CAAC,CAACK,KAAhB,EAAuB;UACrB,OAAO,CAAC,CAAR;QACF;;QACA,OAAO,CAAP;MACD,CARD;IASD;;EApEM;AAbM,CAAf","names":["name","props","data","sortedByDate","sortedByRating","sortedByTitle","methods","sortByDate","tempMovies","movies","sort","a","b","release_date","sortByRank","vote_average","sortByTitle","title"],"sourceRoot":"","sources":["/Users/sylvainrotureau/Desktop/web dev/tmdb/tmdb/src/components/elements/SortButtons.vue"],"sourcesContent":["<template>\n  <p>\n    <button @click=\"sortByTitle\" class=\"btn btn-dark my-2\">\n      Trier par titre\n    </button>\n    <button @click=\"sortByDate\" class=\"btn btn-dark my-2\">\n      Trier par date de sortie\n    </button>\n    <button @click=\"sortByRank\" class=\"btn btn-dark my-2\">\n      Trier par note\n    </button>\n</p>\n</template>\n\n<script>\nexport default {\n  name: \"SortButtons\",\n props: [\n    \"movies\",\n    ],\ndata() {\n  return {\n    sortedByDate: false,\n    sortedByRating: false,\n    sortedByTitle: false,\n  };\n},\n\nmethods: {\n  sortByDate() {\n    const tempMovies = this.movies;\n\nif (!this.sortedByDate) {\n    tempMovies.sort((a, b) => {\n      if (a.release_date > b.release_date) {\n        return 1;\n      }\n      if (a.release_date < b.release_date) {\n        return -1;\n      }\n      return 0;\n    });\n  this.sortedByDate=true;\n    } else {\n    tempMovies.sort((a, b) => {\n      if (a.release_date < b.release_date) {\n        return 1;\n      }\n      if (a.release_date > b.release_date) {\n        return -1;\n      }\n      return 0;\n    });\n  this.sortedByDate=false;\n    }\n  },\n\n  sortByRank() {\n     const tempMovies = this.movies;\n\nif (!this.sortedByDate) {\n    tempMovies.sort((a, b) => {\n      if (a.vote_average > b.vote_average) {\n        return 1;\n      }\n      if (a.vote_average < b.vote_average) {\n        return -1;\n      }\n      return 0;\n    });\n\n} else {\n  tempMovies.sort((a, b) => {\n      if (a.vote_average > b.vote_average) {\n        return 1;\n      }\n      if (a.vote_average < b.vote_average) {\n        return -1;\n      }\n      return 0;\n    });\n}\n  } ,\n\n  sortByTitle() {\n     const tempMovies = this.movies;\n\n    tempMovies.sort((a, b) => {\n      if (a.title > b.title) {\n        return 1;\n      }\n      if (a.title < b.title) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n}\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module"}