{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"mt-5\",\n  id: \"trailer\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-6\"\n};\nconst _hoisted_4 = [\"src\"];\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-6\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.video[0] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.video[0].name), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"iframe\", {\n    width: \"650\",\n    height: \"300\",\n    src: 'https://www.youtube.com/embed/' + $data.video[0].key,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowfullscreen: \"\",\n    class: \"shadow\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_4)]), _hoisted_5])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;EAAOC,EAAE,EAAC;;;EAGhBD,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;gCAOXE,oBAEM,KAFN,EAEM;EAFDF,KAAK,EAAC;AAEL,CAFN,EAAkB,IAAlB,EAAkB;AAAA;AAAlB;;;SAXmCG,YAAK,CAAL,mBAArCC,oBAqBgB,KArBhB,cAqBgB,CApBdF,oBAA0B,IAA1B,EAA0B,IAA1B,EAA0BG,iBAApBF,YAAK,CAAL,EAASG,IAAW,CAA1B,EAAmB;EAAA;EAAnB,CAoBc,EAlBhBJ,oBAYM,KAZN,cAYM,CAXJA,oBAKM,KALN,cAKM,CAJPA,oBAGqD,QAHrD,EAGqD;IAH7CK,KAAK,EAAC,KAGuC;IAHjCC,MAAM,EAAC,KAG0B;IAHbC,GAAG,qCAAqCN,YAAK,CAAL,EAASO,GAGpC;IAFxCC,WAAW,EAAC,GAE4B;IADxCC,KAAK,EAAC,0FACkC;IAAxCC,eAAe,EAAf,EAAwC;IAAxBb,KAAK,EAAC;EAAkB,CAHrD;;EAAA,aAIO,CALN,CAWI,EAJJc,UAII,CAZN,CAkBgB,CArBhB","names":["class","id","_createElementVNode","$data","_createElementBlock","_toDisplayString","name","width","height","src","key","frameborder","allow","allowfullscreen","_hoisted_5"],"sourceRoot":"","sources":["/Users/sylvainrotureau/Desktop/web dev/tmdb/tmdb/src/components/pages/MovieDetails.vue"],"sourcesContent":["<template>\n<div class=\"mt-5\" id=\"trailer\" v-if=\"video[0]\">\n  <h2>{{video[0].name}}</h2>\n\n<div class=\"row\">\n  <div class=\"col-6\">\n <iframe width=\"650\" height=\"300\" v-bind:src=\"'https://www.youtube.com/embed/' + video[0].key\"\n              frameborder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowfullscreen class=\"shadow\"></iframe>\n  </div>\n\n  <div class=\"col-6\">\n \n  </div>\n\n</div>\n\n\n\n\n           \n          </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"MovieDetails\",\n\n  data() {\n    return {\n      id: this.$route.params.id,\n      video: [],\n      preUrl: \"https://image.tmdb.org/t/p/original/\",\n    };\n  },\n\n  created: function () {\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/movie/\" +\n          this.id +\n          \"/videos?api_key=3ea8988340d4ed715d28b9978346c29e&language=fr\"\n      )\n\n      .then((res) => {\n        this.video = res.data.results;\n        console.log(this.video);\n      });\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}