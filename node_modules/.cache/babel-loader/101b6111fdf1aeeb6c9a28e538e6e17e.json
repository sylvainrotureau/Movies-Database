{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"mt-5\",\n  id: \"trailer\"\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.movie, info => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: info.id\n    }, _toDisplayString(info.original_title) + \" \" + _toDisplayString(info.name), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _ctx.video[0] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"iframe\", {\n    width: \"650\",\n    height: \"300\",\n    src: 'https://www.youtube.com/embed/' + _ctx.video[0].key,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowfullscreen: \"\",\n    class: \"shadow\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;EASKA,KAAK,EAAC;EAAOC,EAAE,EAAC;;;;uBARrBC,oBAgBM,KAhBN,EAgBM,IAhBN,EAgBM,oBAdNA,oBAGMC,SAHN,EAGM,IAHN,EAGMC,YAHcC,WAGd,EAHMC,IAAa,IAAT;yBAAhBJ,oBAGM,KAHN,EAGM;MAH4BK,GAAG,EAAED,IAAI,CAACL;IAGtC,CAHN,mBACGK,IAAI,CAACE,kBAAiB,MACzBC,iBAAGH,IAAI,CAACI,IAAR,CAFA,EAEY;IAAA;IAFZ;GAGM,CAHN;;EAAA,CAcM,GAR+BC,WAAK,CAAL,mBAArCT,oBAKgB,KALhB,cAKgB,CAJJU,oBAG0C,QAH1C,EAG0C;IAHlCC,KAAK,EAAC,KAG4B;IAHtBC,MAAM,EAAC,KAGe;IAHFC,GAAG,qCAAqCJ,WAAK,CAAL,EAASJ,GAG/C;IAFxCS,WAAW,EAAC,GAE4B;IADxCC,KAAK,EAAC,0FACkC;IAAxCC,eAAe,EAAf,EAAwC;IAAxBlB,KAAK,EAAC;EAAkB,CAH1C;;EAAA,aAII,CALhB,sCAQM,CAhBN","names":["class","id","_createElementBlock","_Fragment","_renderList","$data","info","key","original_title","_toDisplayString","name","_ctx","_createElementVNode","width","height","src","frameborder","allow","allowfullscreen"],"sourceRoot":"","sources":["/Users/sylvainrotureau/Desktop/web dev/tmdb/tmdb/src/components/pages/MovieDetails.vue"],"sourcesContent":["<template>\n<div>\n\n<div v-for=\"info in movie\" v-bind:key=\"info.id\">\n{{ info.original_title }}\n{{ info.name }}\n</div>\n\n\n<div class=\"mt-5\" id=\"trailer\" v-if=\"video[0]\">\n            <iframe width=\"650\" height=\"300\" v-bind:src=\"'https://www.youtube.com/embed/' + video[0].key\"\n              frameborder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowfullscreen class=\"shadow\"></iframe>\n          </div>\n\n\n</div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"MovieDetails\",\n\n  data() {\n    return {\n      id: this.$route.params.id,\n      movie: [],\n      preUrl: \"https://image.tmdb.org/t/p/original/\",\n    };\n  },\n\n  created: function() {\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/movie/\"+this.id+\"/videos?api_key=3ea8988340d4ed715d28b9978346c29e&language=fr\"\n      )\n\n      .then((res) => {\n        this.movie=res.data.results;\n        console.log(this.video)\n      });\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}